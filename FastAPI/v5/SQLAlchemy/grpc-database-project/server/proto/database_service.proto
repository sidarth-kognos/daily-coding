syntax = "proto3";

package database;

service DatabaseService {
  // Basic CRUD operations
  rpc CreateRecord(CreateRecordRequest) returns (CreateRecordResponse);
  rpc GetRecord(GetRecordRequest) returns (GetRecordResponse);
  rpc UpdateRecord(UpdateRecordRequest) returns (UpdateRecordResponse);
  rpc DeleteRecord(DeleteRecordRequest) returns (DeleteRecordResponse);
  rpc ListRecords(ListRecordsRequest) returns (ListRecordsResponse);
  
  // Database migration operations
  rpc RunMigration(MigrationRequest) returns (MigrationResponse);
  rpc GetMigrationStatus(MigrationStatusRequest) returns (MigrationStatusResponse);
  rpc CreateTable(CreateTableRequest) returns (CreateTableResponse);
  rpc AddColumn(AddColumnRequest) returns (AddColumnResponse);
  rpc DropColumn(DropColumnRequest) returns (DropColumnResponse);
  
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message CreateRecordRequest {
  string table_name = 1;
  string data = 2; // JSON string
}

message CreateRecordResponse {
  bool success = 1;
  string message = 2;
  int64 record_id = 3;
}

message GetRecordRequest {
  string table_name = 1;
  int64 record_id = 2;
}

message GetRecordResponse {
  bool success = 1;
  string message = 2;
  string data = 3; // JSON string
}

message UpdateRecordRequest {
  string table_name = 1;
  int64 record_id = 2;
  string data = 3; // JSON string
}

message UpdateRecordResponse {
  bool success = 1;
  string message = 2;
}

message DeleteRecordRequest {
  string table_name = 1;
  int64 record_id = 2;
}

message DeleteRecordResponse {
  bool success = 1;
  string message = 2;
}

message ListRecordsRequest {
  string table_name = 1;
  int32 page = 2;
  int32 page_size = 3;
  string filter = 4; // Optional filter conditions
}

message ListRecordsResponse {
  bool success = 1;
  string message = 2;
  repeated string records = 3; // JSON strings
  int32 total_count = 4;
}

message MigrationRequest {
  string migration_direction = 1; // "upgrade" or "downgrade"
  string target_revision = 2; // Optional specific revision
}

message MigrationResponse {
  bool success = 1;
  string message = 2;
  string current_revision = 3;
}

message MigrationStatusRequest {}

message MigrationStatusResponse {
  bool success = 1;
  string current_revision = 2;
  repeated string pending_migrations = 3;
}

message CreateTableRequest {
  string table_name = 1;
  string table_schema = 2; // JSON schema definition
}

message CreateTableResponse {
  bool success = 1;
  string message = 2;
}

message AddColumnRequest {
  string table_name = 1;
  string column_name = 2;
  string column_type = 3;
  bool nullable = 4;
  string default_value = 5;
}

message AddColumnResponse {
  bool success = 1;
  string message = 2;
}

message DropColumnRequest {
  string table_name = 1;
  string column_name = 2;
}

message DropColumnResponse {
  bool success = 1;
  string message = 2;
}

message HealthCheckRequest {}

message HealthCheckResponse {
  bool healthy = 1;
  string message = 2;
  string version = 3;
}
 
